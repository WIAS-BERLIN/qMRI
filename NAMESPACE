useDynLib(qMRI, .registration = TRUE, .fixes = "C_")
#exportPattern("^[[:alpha:]]+")

import(oro.nifti, stringr, aws)

importFrom(awsMethods, extract, setCores)
importFrom("stats", "qchisq", "qf", "qnorm", "qt", "nls", "coef", "quantile",
           "dnorm", "median", "sd", "deviance", "lm.fit", "pchisq",
           "formula", "rnorm", "lm.wfit", "optim")
importFrom("graphics", "par")
importFrom("adimpro", "rimage","rimage.options")
importFrom("utils", "data", "setTxtProgressBar", "txtProgressBar")
importFrom("methods", "setOldClass")
importFrom("aws", "awsLocalSigma", "medianFilter3D", "vpawscov2", "estimateSigmaCompl")
importFrom("stringr", "str_match_all")
export(readMPMData,estimateESTATICS,calculateQI,smoothESTATICS)
export("extract.MPMData","extract.ESTATICSModel","extract.sESTATICSModel","extract.qMaps")
export("extract.IRdata","extract.IRfluid","extract.IRmixed")
export("[.MPMData","[.ESTATICSModel","[.sESTATICSModel","[.qMaps")
export("[.IRdata","[.IRfluid","[.IRmixed")
export(readIRData,estimateIRfluid, estimateIRsolid, estimateIRsolidfixed, estimateIR, smoothIRSolid)
export(writeESTATICS,writeQI)
S3method(extract,MPMData)
S3method(extract,ESTATICSModel)
S3method(extract,sESTATICSModel)
S3method(extract,qMaps)
S3method(extract,IRdata)
S3method(extract,IRfluid)
S3method(extract,IRmixed)
S3method('[',MPMData)
S3method('[',ESTATICSModel)
S3method('[',sESTATICSModel)
S3method('[',qMaps)
S3method('[',IRdata)
S3method('[',IRfluid)
S3method('[',IRmixed)
