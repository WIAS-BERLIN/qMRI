
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(qMRI)
Loading required package: awsMethods

Use the function setCores() to change the number of CPU cores.

> dataDir <- system.file("extdata",package="qMRI")
> #
> #  set file names for T1w, MTw and PDw images
> #
> t1Names <- paste0("t1w_",1:8,".nii.gz")
> mtNames <- paste0("mtw_",1:6,".nii.gz")
> pdNames <- paste0("pdw_",1:8,".nii.gz")
> t1Files <- file.path(dataDir, t1Names)
> mtFiles <- file.path(dataDir, mtNames)
> pdFiles <- file.path(dataDir, pdNames)
> #
> #  file names of mask and B1 field map
> #
> B1File <- file.path(dataDir, "B1map.nii.gz")
> maskFile <- file.path(dataDir, "mask.nii.gz")
> #
> #  Acquisition parameters (TE, TR, Flip Angle) for T1w, MTw and PDw images
> #
> TE <- c(2.3, 4.6, 6.9, 9.2, 11.5, 13.8, 16.1, 18.4,
+         2.3, 4.6, 6.9, 9.2, 11.5, 13.8,
+         2.3, 4.6, 6.9, 9.2, 11.5, 13.8, 16.1, 18.4)
> TR <- rep(25, 22)
> FA <- c(rep(21, 8), rep(6, 6), rep(6, 8))
> #
> #   read MPM example data
> #
> library(qMRI)
> mpm <- readMPMData(t1Files, pdFiles, mtFiles,
+                    maskFile, TR = TR, TE = TE,
+                    FA = FA, verbose = FALSE)
> #
> #  Estimate Parameters in the ESTATICS model
> #
> modelMPM <- estimateESTATICS(mpm, method = "NLR", verbose=FALSE)
> # Alternatively using Quasi-Likelihood
> sigma <- 50
> modelMPMQL <- estimateESTATICS(mpm, method = "QL",
+                   sigma = array(sigma, mpm$sdim), L = 1, verbose=FALSE)
> #
> #  smooth maps of ESTATICS Parameters
> #
> setCores(2)
  Total CPU cores available: 8  CPU cores in use: 2.
> modelMPMQLsp1 <- smoothESTATICS(modelMPM,
+                               kstar = 16,
+                               alpha = 0.004,
+                               patchsize=1,
+                               verbose = FALSE)
using lambda= 125.0501  patchsize= 1 
Progress:
> #
> #  Compute quantitative maps (R1, R2star, PD, MT)
> #
> qMRIMaps <- calculateQI(modelMPM,
+                         b1File = B1File,
+                         TR2 = 3.4)
reading B1 correction file from /Users/polzehl/Rlibs/qMRI.Rcheck/qMRI/extdata/B1map.nii.gz 
calculating R1 ... Spoiling correction ... v3* 0.8mm R4 protocol
Spoiling correction ... v3* 0.8mm R4 protocol
done
calculating PD ... done
calculating MT ... done
> qMRIQLSmoothedp1Maps <- calculateQI(modelMPMQLsp1,
+                                     b1File = B1File,
+                                     TR2 = 3.4)
reading B1 correction file from /Users/polzehl/Rlibs/qMRI.Rcheck/qMRI/extdata/B1map.nii.gz 
calculating R1 ... Spoiling correction ... v3* 0.8mm R4 protocol
Spoiling correction ... v3* 0.8mm R4 protocol
done
calculating PD ... done
calculating MT ... done
> #
> #   some statistics on differences between results
> #
> qm <- extract(qMRIMaps,c("R1","R2star","MT","PD"))
> qms <- extract(qMRIQLSmoothedp1Maps,c("R1","R2star","MT","PD"))
> cat("mean of estimated quantitative maps\n",
+     mean(qm$R1), mean(qm$R2star), mean(qm$MT), mean(qm$PD),"\n",
+     "mean of estimated quantitative maps\n",
+     mean(qms$R1), mean(qms$R2star), mean(qms$MT), mean(qms$PD),"\n",
+     "Root mean squared difference between estimated and smoothed quantitative maps\n",
+     sqrt(mean((qm$R1-qms$R1)^2)), sqrt(mean((qm$R2star-qms$R2star)^2)),
+     sqrt(mean((qm$MT-qms$MT)^2)), sqrt(mean((qm$PD-qms$PD)^2)),"\n")
mean of estimated quantitative maps
 0.7835383 18.19139 0.9031551 5722.077 
 mean of estimated quantitative maps
 0.7788351 18.0804 0.8919021 5682.032 
 Root mean squared difference between estimated and smoothed quantitative maps
 0.09431829 5.530119 0.2392539 492.7548 
> 
> proc.time()
   user  system elapsed 
 70.259   0.750  68.376 
