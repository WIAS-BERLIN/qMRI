\documentclass[a4paper]{article}
\newcommand{\pkg}[1]{{\normalfont\fontseries{b}\selectfont #1}\index{Packages!#1}}
\let\proglang=\textsf
\let\code=\texttt
%\VignetteIndexEntry{Analyzing MPM data with package qMRI}

\title{An example session for analyzing Multi-Parameter-Mapping experiments}
\author{J\"org Polzehl}
\begin{document}
\SweaveOpts{concordance=TRUE}
\maketitle
%\SweaveOpts{concordance=TRUE}
\setkeys{Gin}{width=\textwidth}
This vignette illustrates the workflow of analyzing Multi-Parameter-Mapping (MPM) experiments.
It uses artificial data, produced from analysis results of a real MPM experiment, supplied with 
the package. 

The data consist of 22 image files in NIfTI format that are supposed to be measured using 
three different imaging modalities, i.e., $T_1$ weigthed images, proton density (PD) weigthed images and 
magnetization transfer (MT) maps. For each modality several images are recorded with varying echo times. 

We first specify the directory where the data are stored
<<1>>=
dataDir <- system.file("extdata",package="qMRI")
@

We now specify the filenames of the recorded images, a $B_1$ field map characterizing the bias originating from
local magnetic field variations and a mask file
<<2>>=
t1Names <- paste0("t1w_",1:8,".nii.gz")
mtNames <- paste0("mtw_",1:6,".nii.gz")
pdNames <- paste0("pdw_",1:8,".nii.gz")
t1Files <- file.path(dataDir, t1Names)
mtFiles <- file.path(dataDir, mtNames)
pdFiles <- file.path(dataDir, pdNames)
B1File <- file.path(dataDir, "B1map.nii.gz")
maskFile <- file.path(dataDir, "mask.nii.gz")
@ 
and the acquisition parameters (echo time (TE), repitition time (TR) and flip angle (FA)) for T1w, MTw and PDw images, respectively.
<<3>>=
TE <- c(2.3, 4.6, 6.9, 9.2, 11.5, 13.8, 16.1, 18.4,
        2.3, 4.6, 6.9, 9.2, 11.5, 13.8,
        2.3, 4.6, 6.9, 9.2, 11.5, 13.8, 16.1, 18.4)
TR <- rep(25, 22)
FA <- c(rep(21, 8), rep(6, 6), rep(6, 8))
@

We are now ready to read the data into \proglang{R} unsin function \code{readMPMData}
<<4>>=
library(qMRI)
mpm <- readMPMData(t1Files, pdFiles, mtFiles,
                   maskFile, TR = TR, TE = TE,
                   FA = FA, verbose = FALSE)
@
which created aan object \code{mpm} of class \code{''MPMdata''}.

Parameters in the ESTATICS model are estimated by 
<<5>>=
modelMPM <- estimateESTATICS(mpm, 
                method = "NLR", verbose=FALSE)
@
using nonlinear least-squares regression or alternatively  by 
<<6>>=
sigma <- array(50,mpm$sdim)
modelMPMQL <- estimateESTATICS(mpm, method = "QL",
                  sigma = sigma, L = 1, verbose=FALSE)
@
using a quasi-likelihood formulation. The latter, in case of low signal-to-noise ratio (SNR), avoids
the bias caused by the skewness of the Rician signal distribution. The application of  quasi-likelihood 
requires to specify the scale parameter $\sigma$ of the Rician distribution. Alternatively a map of scale parameters
could be estimated using function \code{awslsigmc} from package \pkg{dti}
<<eval=FALSE>>=
ddata <- extract(mpm,"ddata")
if(require(dti)) sigma <- awslsigmc(ddata[1,,,],16)$sigma
@
Patchwise structural adaptive smoothing can be used to reduce the variability of the estimated parameter maps
and, if \code{mpmData} is specified, the observed image data
<<7>>=
setCores(2)
modelMPMQLsp1 <- smoothESTATICS(modelMPM,
                              mpmData = extract(mpm,"ddata"),
                              kstar = 16,
                              alpha = 0.004,
                              patchsize=1,
                              verbose = TRUE)
@
The resulting ESTATICS parameter maps for the central coronal slice can be illustrated by
<<8,fig=TRUE,width=12,height=6.5>>=
library(adimpro)
rimage.options(zquantiles=c(.01,.99), ylab="z")
par(mfrow=c(2,4),mar=c(3,3,3,1),mgp=c(2,1,0))
pnames <- c("T1","MT","PD","R2star")
for(i in 1:4){
   rimage(modelMPMQL$modelCoeff[i,,11,])
   title(pnames[i])
   }
for(i in 1:4){
   rimage(modelMPMQLsp1$modelCoeff[i,,11,])
   title(paste("smoothed",pnames[i]))
   }
@

The resulting parameter maps may be further improved, avoiding biases 
when estimating parameters in the nonlinear ESTATICS model that are 
due to data variability. 
<<9>>=
mpmsp1 <- mpm
mpmsp1$ddata <- modelMPMQLsp1$smoothedData
sigma <- array(50,mpm$sdim)
modelMPMQL2 <- estimateESTATICS(mpmsp1, method = "QL",
                  sigma = sigma, L = 1, verbose=FALSE)
@
Note that we again employ the same Rician scale parameter.

We are now ready to compute the quantitative R1, R2star, PD and MT maps
<<10>>=
qMRIMaps <- calculateQI(modelMPM,
                        b1File = B1File,
                        TR2 = 3.4)
qMRIQLMaps <- calculateQI(modelMPMQL,
                        b1File = B1File,
                        TR2 = 3.4)
qMRIQLSmoothedp1Maps <- calculateQI(modelMPMQLsp1,
                                    b1File = B1File,
                                    TR2 = 3.4)
qMRIQL2Maps <- calculateQI(modelMPMQL2,
                        b1File = B1File,
                        TR2 = 3.4)
@

We show the central coranal slice of the estimated maps together with the 
maps for the ground truth used to generate the data
<<fig=TRUE, width=12,height=13>>=
library(oro.nifti)
zlim <- matrix(c(0,0,0,3000,1.5,35,2,10000),4,2)
R1 <- readNIfTI(file.path(dataDir, "R1map.nii.gz"))
R2star <- readNIfTI(file.path(dataDir, "R2starmap.nii.gz"))
MT <- readNIfTI(file.path(dataDir, "MTmap.nii.gz"))
PD <- readNIfTI(file.path(dataDir, "PDmap.nii.gz"))
rimage.options(ylab="z")
par(mfrow=c(4,4),mar=c(3,3,3,1),mgp=c(2,1,0))
nmaps <- c("R1","R2star","MT","PD")
rimage(R1[,11,], zlim=zlim[1,], main=paste("true",nmaps[1]))
rimage(R2star[,11,], zlim=zlim[2,], main=paste("true",nmaps[2]))
rimage(MT[,11,], zlim=zlim[3,], main=paste("true",nmaps[3]))
rimage(PD[,11,], zlim=zlim[4,], main=paste("true",nmaps[4]))
qmap1 <- extract(qMRIQLMaps,nmaps)
for (i in 1:4) rimage(qmap1[[i]][,11,], zlim=zlim[i,], 
                      main=paste("Estimated",nmaps[i]))
qmap2 <- extract(qMRIQLSmoothedp1Maps,nmaps)
for (i in 1:4) rimage(qmap2[[i]][,11,], zlim=zlim[i,], 
                      main=paste("Smoothed",nmaps[i]))
qmap3 <- extract(qMRIQL2Maps,nmaps)
for (i in 1:4) rimage(qmap3[[i]][,11,], zlim=zlim[i,],
                      main=paste("Smoothed data",nmaps[i]))
@

Using quasi-likelihood is, for low SNR, supposed to reduce the bias caused by the skewness
of the Rician distribution.
<<>>=
qmap0 <- extract(qMRIMaps,nmaps)
cat("\n", "Bias of NLR estimates\n",
    "R1",mean(qmap0$R1-R1),"R2star",mean(qmap0$R2star-R2star),
    "MT",mean(qmap0$MT-MT),"PD",mean(qmap0$PD-PD),"\n",
"Bias of  QL estimates\n",
    "R1",mean(qmap1$R1-R1),"R2star",mean(qmap1$R2star-R2star),
    "MT",mean(qmap1$MT-MT),"PD",mean(qmap1$PD-PD),"\n")
@
Let's see which estimate performs best with respect to the root mean squared error (RMSE).
<<>>=
cat("\n", "Root mean squared error of NLR estimate\n",
    "R1",sqrt(mean((qmap0$R1-R1)^2)),
    "R2star",sqrt(mean((qmap0$R2star-R2star)^2)),
    "MT",sqrt(mean((qmap0$MT-MT)^2)),
    "PD",sqrt(mean((qmap0$PD-PD)^2)),"\n",
"Root mean squared error of  QL estimate\n",
    "R1",sqrt(mean((qmap1$R1-R1)^2)),
    "R2star",sqrt(mean((qmap1$R2star-R2star)^2)),
    "MT",sqrt(mean((qmap1$MT-MT)^2)),
    "PD",sqrt(mean((qmap1$PD-PD)^2)),"\n",
"Root mean squared error of smoothed QL estimate\n",
    "R1",sqrt(mean((qmap2$R1-R1)^2)),
    "R2star",sqrt(mean((qmap2$R2star-R2star)^2)),
    "MT",sqrt(mean((qmap2$MT-MT)^2)),
    "PD",sqrt(mean((qmap2$PD-PD)^2)),"\n",
"Root mean squared error of QL estimate from smoothed data \n",
    "R1",sqrt(mean((qmap3$R1-R1)^2)),
    "R2star",sqrt(mean((qmap3$R2star-R2star)^2)),
    "MT",sqrt(mean((qmap3$MT-MT)^2)),
    "PD",sqrt(mean((qmap3$PD-PD)^2)),"\n")
@
For a comparison we need to compare this to the mean parameter values
<<>>=
cat("\n", "Mean R1", mean(R1), "Mean R2star", mean(R2star), 
          "Mean MT", mean(MT), "Mean PD", mean(PD),"\n")
@
Note that using QL is supposed to reduce the bias of the estimated ESTATICS parameters, but does so
at the cost of an slightly increased variance. Adaptive spatial smoothing leads to a considerable reduction in
RMSE. Modelling of the spatially smoothed data has the additional effect of reduced bias originating from data variability.
\end{document}